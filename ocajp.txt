Java Basics 

	Define the scope of variable
	Define the structure of a java class
	Create executable java application with a main method, run a java program form the command line, produce console output
	Import other java packages to make them accessable in your code
	Compare and contrast the features and components of java such as: platform independnce, object orientation, encapsulation


Working with Java Data types

	Declare and initalize variables( including casting of primitive data types) 
	Differentiate between object reference variables and primitive data variables
	Know how to read or write to object field
	Explain an Objects life cycle(Creation reassignment and garbage collection)
	Develop code that uses wrapper classes such as  Boolean, Double and Integer

Using Operators and Declaration Constructs

	Use Java operators; use parentheses to override operator precedence
	Test equality between Strings and other objects using == and .equals()
	Care if and if/else and ternary construct 
	Use switch statement


Creating and Using Arrays

	Declare, instantiate, Initialize and use one dimensional array
	Declare, instantiate, Initialize and use multi dimensional array

Using Loop Construct
	
	Create and use while loops
	Create and use for loops including the enhanced loop
	Create and use do/while loops
	Compare loop constructs
	Use break and continue

Working wit Methods and Encapsulation

	Create methods with arguments and return values including overloaded methods
	Apply the static keyword to method and fields
	Crate and overload constructors, differntiate between default and use defined constructors
	Apply access modifiers
	Apply Encapsulation principles to a class
	Determine th effec upon object reference and primitve values they are passed into method that chnage the values

Working with Inheritance
	
	Describe inheritance and its benifits
	Develop code that makes use of polymorphism; develop code that overrides methods; differntiate between the type of reference
	and the type of an object
	Determine when casting is necessary
	Use super and this to access objects and constructors
	Use abstract classes and interfaces

Handling Exceptions
	
	Diferentiate among checked exceptions and unchecked excepttions
	Create try catch block and determine how exceptions alter normal program flow
	Describe the advantages of exception handling
	Create and invoke a method that throws an exception 
	Recognize common exception classes( such as NullpointerException, ArithematicException, ClassCastException, ArrayIndexOutOfBoundException)
	

Working with Selected classes form the java API

	Manupulate data using the StringBuffer class and its methods
	Create and manipulate Stirngs
	Crate and manipulate calendar data using classess form java.tim.LocalDateTime,
	 java.time.LocalDate; java.time.format.DatetTimeFormatter java.time.Period
	Delcare and use and ArraList  of a given type
	Write a simple Lambda expression that consumes a Lambda Predicate expression